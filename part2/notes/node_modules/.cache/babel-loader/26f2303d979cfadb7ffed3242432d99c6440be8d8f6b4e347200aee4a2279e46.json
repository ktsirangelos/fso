{"ast":null,"code":"var _jsxFileName = \"/Users/k/Documents/fso/part2/notes/src/index.js\";\nimport ReactDOM from \"react-dom/client\";\nimport axios from \"axios\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.get(\"http://localhost:3001/notes\").then(response => {\n  const notes = response.data;\n  ReactDOM.createRoot(document.getElementById(\"root\")).render( /*#__PURE__*/_jsxDEV(App, {\n    notes: notes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this));\n});\nconst notes = [{\n  id: 1,\n  content: \"HTML is easy\",\n  important: true\n}, {\n  id: 2,\n  content: \"Browser can execute only JavaScript\",\n  important: false\n}, {\n  id: 3,\n  content: \"GET and POST are the most important methods of HTTP protocol\",\n  important: true\n}];\nReactDOM.createRoot(document.getElementById(\"root\")).render( /*#__PURE__*/_jsxDEV(App, {\n  notes: notes\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["ReactDOM","axios","App","jsxDEV","_jsxDEV","get","then","response","notes","data","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber","id","content","important"],"sources":["/Users/k/Documents/fso/part2/notes/src/index.js"],"sourcesContent":["import ReactDOM from \"react-dom/client\";\nimport axios from \"axios\";\nimport App from \"./App\";\n\naxios.get(\"http://localhost:3001/notes\").then((response) => {\n  const notes = response.data;\n  ReactDOM.createRoot(document.getElementById(\"root\")).render(\n    <App notes={notes} />\n  );\n});\n\nconst notes = [\n  {\n    id: 1,\n    content: \"HTML is easy\",\n    important: true,\n  },\n  {\n    id: 2,\n    content: \"Browser can execute only JavaScript\",\n    important: false,\n  },\n  {\n    id: 3,\n    content: \"GET and POST are the most important methods of HTTP protocol\",\n    important: true,\n  },\n];\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <App notes={notes} />\n);\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExBH,KAAK,CAACI,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;EAC1D,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI;EAC3BT,QAAQ,CAACU,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAACC,MAAM,eACzDT,OAAA,CAACF,GAAG;IAACM,KAAK,EAAEA;EAAM;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACtB,CAAC;AACH,CAAC,CAAC;AAEF,MAAMT,KAAK,GAAG,CACZ;EACEU,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,cAAc;EACvBC,SAAS,EAAE;AACb,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,qCAAqC;EAC9CC,SAAS,EAAE;AACb,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,8DAA8D;EACvEC,SAAS,EAAE;AACb,CAAC,CACF;AAEDpB,QAAQ,CAACU,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAACC,MAAM,eACzDT,OAAA,CAACF,GAAG;EAACM,KAAK,EAAEA;AAAM;EAAAM,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}